version: '2'
services:
  web:
    build: .
    ports:
     - "8080:8080"
    networks:
      - reverse-proxy
      - back
    environment:
      - VIRTUAL_PORT=8080
      - VIRTUAL_HOST=example.com # set this to the hostname that clients will type into their browsers
      - LETSENCRYPT_HOST=example.com # set this to the hostname that clients will type into their browsers
      - LETSENCRYPT_EMAIL=someone@somewhere.com # set this to the email address that letsencrypt can send expiration warnings to
  notify-me:
    build: ./notify_me
    networks:
      - back
  onkyo-control:
    build: ./onkyo_control
    networks:
      - back

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "55580:80" # 55580 here is the port the docker server will be listening on. NAT your router's port 80 to this port.
      - "55443:443" # 55443 here is the port the docker server will be listening on. NAT your router's port 443 to this port.
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - reverse-proxy

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-le
    volumes_from:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - reverse-proxy

volumes:
  conf:
  vhost:
  html:
  dhparam:
  certs:

networks:
  reverse-proxy:
    external:
      name: reverse-proxy
  back:
    driver: bridge
